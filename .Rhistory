library("bartMachine")
library("bart")
options(java.parameters = "-Xmx2500m")
set_bart_machine_num_cores(2)
db = read.csv("http://www.rob-mcculloch.org/data/diabetes.csv")
smp_size <- floor(0.75 * nrow(db))
#' set the seed to make your partition reproducible
set.seed(123)
train_ind <- sample(seq_len(nrow(db)), size = smp_size)
train <- db[train_ind, ]
test <- db[-train_ind, ]
x_train <- train[,-c(1)]
y_train <- train[,1]
x_test <- test[,-c(1)]
y_test <- test[,1]
bart_machine
bart_machine <- bartMachine(x_train, y_train)
bart_machine
bart_machine <- bartMachine(X, y, serialize = TRUE)
bart_machine <- bartMachine(x_train, y_train, serialize = TRUE)
bart_machine <- bartMachine(x_train, y_train)
bart_machine
bart_machine <- bartMachine(x_train, y_train, serialize = TRUE)
bart_machine
save.image("bart_machine.RData")
check_bart_error_assumptions(bart_machine)
check_bart_error_assumptions(bart_machine)
plot_convergence_diagnostics(bart_machine)
check_bart_error_assumptions(bart_machine)
graphics.off()
par("mar")
par(mar=c(1,1,1,1))
check_bart_error_assumptions(bart_machine)
graphics.off
check_bart_error_assumptions(bart_machine)
png("error_assumption.png", 640, 480)
check_bart_error_assumptions(bart_machine)
check_bart_error_assumptions(bart_machine)
check_bart_error_assumptions(bart_machine)
check_bart_error_assumptions(bart_machine)
check_bart_error_assumptions(bart_machine)
check_bart_error_assumptions(bart_machine)
